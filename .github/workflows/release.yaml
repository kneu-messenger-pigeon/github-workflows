name: Test and release

on:
  workflow_call:
    inputs:
      docker_root_user:
        description: 'Use `root` in docker image (not nobody)'
        type: boolean
        default: false
        required: false
    secrets:
      CODECOV_TOKEN:
        required: true
      TOKEN_TO_RUN_GITHUB_ACTION:
        required: true

jobs:
  test:
    uses: ./.github/workflows/test.yaml
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build:
    needs: test
    runs-on: ubuntu-22.04
    outputs:
      imageid: ${{ steps.docker_build.outputs.imageid }}
    steps:
      - uses: actions/checkout@v3
      - name: Checkout github-workflows
        uses: actions/checkout@v3
        with:
          repository: kneu-messenger-pigeon/github-workflows
          path: github-workflows

      - name: Make Dockerfile
        run: |
          [ -f Dockerfile ] || cp ./github-workflows/Dockerfile Dockerfile
          if  [ -f Append.dockerfile ]; then
             echo "" >> Dockerfile
             cat Append.dockerfile >> Dockerfile
             echo "" >> Dockerfile
          fi
          echo "" >> .dockerignore && cat ./github-workflows/.dockerignore >> .dockerignore
          sed -i "s/\"\/app\"/\"\/${{ github.event.repository.name }}\"/g" Dockerfile
          cat Dockerfile
        # replace all `"/app"` to `/{REPO_NAME}` to have understandable process name in `ps aux`
      - name: Choose docker user
        id: docker_user
        run: if ${{ inputs.docker_root_user }}; then echo "USER=root"; else echo "USER=nobody"; fi >> $GITHUB_OUTPUT
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64,linux/arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.1.1
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            USER=${{ steps.docker_user.outputs.USER }}

  dispatch-pigeon:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: Pigeon App Repository Dispatch
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.TOKEN_TO_RUN_GITHUB_ACTION }}
          repository: kneu-messenger-pigeon/pigeon-app
          event-type: image-built
          client-payload: '{"image": "${{ github.event.repository.name }}", "digest": "${{ needs.build.outputs.imageid }}"}'
